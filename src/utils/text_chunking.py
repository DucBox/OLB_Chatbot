import tiktoken  
from langchain_text_splitters import RecursiveCharacterTextSplitter
from src.utils.config import CHUNK_SIZE
def count_tokens(text):
    """
    Counts the number of tokens in a given text using tiktoken.

    Args:
        text (str): The text to be tokenized.

    Returns:
        int: The token count.
    """
    encoding = tiktoken.encoding_for_model("gpt-4o")
    return len(encoding.encode(text))

def chunk_text(text: str, chunk_size: int = CHUNK_SIZE) -> list[str]:
    """
    Chia vÄƒn báº£n báº±ng RecursiveCharacterTextSplitter cá»§a LangChain,
    GIá»® nguyÃªn Ä‘á»‹nh dáº¡ng dÃ²ng vÃ  cho phÃ©p chá»“ng láº¥n giá»¯a cÃ¡c chunk.

    Args:
        text (str): VÄƒn báº£n gá»‘c.
        chunk_size (int): Sá»‘ lÆ°á»£ng kÃ½ tá»± má»—i chunk.

    Returns:
        list[str]: Danh sÃ¡ch cÃ¡c Ä‘oáº¡n text Ä‘Ã£ chia.
    """
    CHUNK_OVERLAP = 100
    splitter = RecursiveCharacterTextSplitter(
        chunk_size=chunk_size,
        chunk_overlap=CHUNK_OVERLAP
    )
    chunks = splitter.split_text(text)

    for i, chunk in enumerate(chunks, 1):
        print(f"\nğŸ§© Chunk {i}:\n{'-'*40}\n{chunk}\n{'='*40}")

    return chunks